\chapter{Nociones Preliminares}
\label{Nociones Preliminares}
\markboth{}{}

\section{Conceptos financieros elementales}


\subsection{Los tipos de Interés}

Si depositamos dinero en una cuenta bancaria, al cabo de un cierto tiempo este capital se incrementa 
en un determinado monto, llamado \textbf{interés}.

\vspace{5mm}

\begin{enumerate}
  \item \textbf{Interés Simple}: La fórmula correspondiente es:

  $V = V_0 (1+rt)$

  donde $V$ representa el valor de un depósito de valor inicial $V_0$ transcurrido
  un tiempo $t$ y $r$ es la tasa de interés correspondiente a la unidad de tiempo utilizada, usualmente el año.

  \item \textbf{Interés Compuesto}:

  $V = V_0 \left( 1+ \displaystyle\frac{r}{n} \right)^{nt}$

  donde que $V$ , $V_0$ y $t$ tienen las mismas condiciones que para el interés simple, pero una tasa
  $r$ de interés nominal anual compuesta $n$ veces al año.

  \item \textbf{Interés Continuo}:

  El interés continuo puede verse como el interés compuesto para $n \rightarrow \infty$, es decir:

  $V = \lim_{n \to \infty} V_0 \left( 1+ \displaystyle\frac{r}{n} \right)^{nt} = V_0e^{rt}$ 

\end{enumerate}


\subsection{Tasa libre de riesgo}

A los efectos de valoración de derivados se asume la existencia de una tasa llamada \textbf{tasa libre
de riesgo}. Se trata de una tasa de referencia que no tiene riesgo crediticio, es decir, que un inversor
sabe que invirtiendo a esa tasa podrá recuperar el capital. Por ejemplo, los bonos del tesoro (Bonar 2025), 
o alguna tasa a la cual el propio estado ofrece para la devolución del préstamo (LEBAC, LETES)~\cite{Kisbye}.

\subsection{Productos básicos}

Denominamos productos básicos a aquellos instrumentos financieros cuyo valor no depende de
otro activo. Entre ellos están las acciones, los índices, las monedas, los commodities y los bonos.


\subsection{Derivados}

Un derivado puede ser definido como un instrumento financiero cuyo valor depende o deriva
de los valores de otros activos subyacentes. Estos activos subyacentes podrían ser activos básicos u
otros derivados.

En términos generales, un derivado consiste en un contrato entre dos partes para comprar o
vender el subyacente. Las características y condiciones de estos contratos dan lugar a diferentes
tipos de derivados, tales como contratos forward, futuros y opciones.

\subsection{Mercados financieros}

Los instrumentos financieros se comercializan en el mercado financiero. En la práctica existe
un mercado formal u organizado y un mercado extrabursátil, denominado también  
\textit{over the counter market} (mercados OTC) . En el caso del mercado formal, las negociaciones son multilaterales, es decir, existen múltiples agentes que actúan como compradores o vendedores de productos financieros.
Los instrumentos que se comercializan están estandarizados, y existe una regulación de este tipo
de mercados para proteger a los inversores de posibles incumplimientos de las contrapartes.
En el caso del mercado extrabursátil, las negociaciones son bilaterales, es decir, entre dos partes.
En estos casos los contratos suelen acordarse entre las partes en cuanto a la cantidad y 
características del subyacente. No existe una regulación formal sino que se basa en un principio de confianza
entre partes.

El tamaño del segmento de mercados OTC es varias veces mayor que el de los mercados regulados, especialmente en los contratos de tipos de interés y de divisas. Según un estudio de ICAP\cite{ICAP}, estima que cada día se producen 2 millones de transacciones en los mercados OTC por un nominal de 5 billones de dólares.

\subsection{Opciones}

Las opciones son contratos que dan derecho a una de sus partes a comprar (o vender) el subyacente, 
a un precio determinando en un tiempo futuro. Las opciones que dan derecho a compra se
denominan \textbf{calls} y las que dan derecho a venta se denominan \textbf{puts}. Estos contratos tienen un valor
inicial denominado prima, que es el precio al cual compra el contrato quien adquiere el derecho a
compra o venta.

Quien compra una opción está en posición long sobre el contrato, y quien la vende está en
posición short.

El agente que esté en posición long tiene derecho a ejercerla o no. En cambio el que este en posición
short tiene una obligación sobre lo que haga su contraparte.

Las opciones que se negocian en mercados formales se denominan \textit{opciones vanilla o estándar}.

Dentro de las opciones vanilla existen dos tipos:

\begin{itemize}
  \item \textbf{Opciones Europeas}: son aquellas cuyo ejercicio ocurre sólo en la fecha de madurez.
  \item \textbf{Opciones americanas}: son aquellas que pueden ser ejercidas en cualquier momento previo a la madurez.
\end{itemize} 

En el mercado OTC se negocia una variedad mucho mayor de opciones y se denominan en general
\textit{opciones exóticas}~\cite{Kisbye}. Dentro de las \textit{opciones exóticas} se agrupan a todas aquellas opciones que tienen una mayor complejidad en comparación con las opciones vanilla. Algunas opciones exóticas son:

 \begin{itemize}
  \item \textbf{Opciones lookback}: son aquellas cuyo payoff depende del valor máximo, o del valor mínimo, que haya alcanzado el subyacente desde el inicio del contrato hasta su madurez.
  \item \textbf{Opciones asiáticas}: son aquellas cuyo payoff depende del promedio de valores que ha tomado el subyacente durante la vigencia del contrato, o de una parte de ese tiempo.
  \item \textbf{Opciones barrera}: son aquellas cuyo payoff depende de que el subyacente haya cruzado una
  determinada barrera a lo largo de la vigencia del contrato.
\end{itemize} 

Otras opciones exóticas son las binarias, bermudas, choice, shout, basket, exchange, y muchas otras.

\vspace{3mm}

En cada contrato se fija entonces un precio de ejercicio o \textbf{strike}, que es el precio pactado al
cual se comprará o venderá el subyacente, en la fecha de expiración o también llamada \textbf{madurez}
del contrato. Así, un inversor que negocia una opción adquiere una de las siguientes posiciones en
el contrato:

\begin{itemize}
  \item \textbf{posición long}: quien compra la opción, y por lo tanto tiene derecho a ejercerla.
  \item \textbf{posición short}: quien vende la opción o suscriptor, y por lo tanto contrae una obligación.
\end{itemize}

\subsection{Payoff y Ganancia}

El payoff de una opción europea es el valor del contrato en su madurez en función del valor del
subyacente. El costo inicial o prima de la opción no se incluye en el cálculo.
Si $K$ es el precio strike y $S(T)$ es el precio final del subyacente, entonces una opción call se
ejerce sólo si $S(T) > K$ ya que en caso contrario el inversor en posición long preferirá comprar
el subyacente en el mercado. En el caso de una put, el inversor en posición long ejercerá la opción
sólo si $K > S(T)$. Así, el valor del contrato en su madurez está dado por la ganancia o pérdida
neta del inversor en caso de que se ejerza o no la opción. El Cuadro~\ref{cua:payoff} resume los payoff de las
opciones call y put europeas. Observar las Figuras~\ref{longpayoff}~\ref{shortpayoff}.

Los diagramas de payoff para cada una de las posiciones en una opción europea con strike K
son los gráficos del Payoff en función del precio final del activo subyacente.
El beneficio o ganancia real del inversor incluye además el costo de la prima 
(Figuras~\ref{longganancia}~\ref{shortganancia}).

\centerline{Payoff $\pm$ prima}

donde $\pm$ dependerá de la posición long $(-)$ o la posición short $(+)$~\cite{Kisbye}.

\begin{table}[h!]
\begin{center}
\caption{Payoffs de call y put europeas}
\label{cua:payoff}
\begin{tabular}{|c|c|}
\hline

Opción & Payoff \\  \hhline{|=|=|}
Long en una Call & máx$(S(T) - K, 0)$ \\  \hline
Short en una Call & $- \max(S(T) - K, 0) =\min(K - S(T), 0)$ \\ \hline
Long en una Put & $\max(K - S(T), 0)$ \\ \hline
Short en una Put & $-\max(K - S(T), 0) = \min(S(T) - K, 0))$\\ 
\hline
\end{tabular}
\end{center}
\end{table}

\begin{figure}[H]
  \centering
  \includegraphics[width=16cm, height=5cm]{payofflong}
  \caption{Payoff de posiciones long en una call y en una put con strike $K$ y madurez T.}
  \label{longpayoff}
\end{figure}

\begin{figure}[H]
  \centering
  \includegraphics[width=16cm, height=5cm]{payoffshort}
  \caption{Payoff de posiciones short en una call y en una put con strike $K$ y madurez T.}
  \label{shortpayoff}
\end{figure}

\begin{figure}[]
   \centering
   \begin{minipage}[b]{0.45\textwidth}
    \includegraphics[width=1\textwidth]{callganancia.png}  
   \end{minipage}
   \hfill
   \begin{minipage}[b]{0.45\textwidth}
    \includegraphics[width=1\textwidth]{putganancia.png}
  \end{minipage}
  \caption{Ganancia de posiciones long en una call y en una put con strike $K$ y madurez $T$.}
  \label{longganancia}
\end{figure}


\begin{figure}[]
   \centering
   \begin{minipage}[b]{0.45\textwidth}
    \includegraphics[width=1\textwidth]{callshorty.png}  
   \end{minipage}
   \hfill
   \begin{minipage}[b]{0.45\textwidth}
    \includegraphics[width=1\textwidth]{putshorty.png}
  \end{minipage}
  \caption{Ganancia de posiciones short en una call y en una put con strike $K$ y madurez $T$.}
  \label{shortganancia}
\end{figure}


\subsection{Estrategias con opciones}

Las estrategias son mecanismos que utilizan los inversionistas para obtener ganancia, o cubrirse de posibles casos adversos. A la combinación de diferentes opciones y activos se las llama \textbf{portfolio}.

Un \textbf{portfolio} o cartera, es un conjunto de activos, derivados e inversiones bancarias que puede
tener un inversor. El valor de este portfolio es la suma de los valores de sus componentes, con un
signo positivo o negativo según estén a favor o no del inversor. Las posiciones long en un activo o
derivado financiero y una cuenta bancaria son valores positivos. Las posiciones short y las deudas
tienen valor negativo.

Veremos algunos portfolios específicos construidos con opciones.

\subsubsection{Spreads}

Los \textit{spreads} son estrategias que utilizan opciones del mismo tipo. Esto es: todas call o todas
put. Un inversor que cree que el mercado está en alza utiliza un \textit{bull spread}, mientras que si cree
que está en baja utiliza un \textit{bear spread}.
Un \textit{bull spread} con calls se construye con una posición long en una call, con prima $c_1$ y strike $K_1$, y 1 posición short en una call, con prima $c_2$ strike $K_2$, con $K_1 < K_2$ y ambos con la misma fecha de expiración $T$ . Luego el payoff está dado por:

\vspace{5mm}

$$\mbox{Payoff(bull spread con calls)} = \max\{S(T) - K_1, 0\} - \max\{S(T) - K_2, 0\}$$

\vspace{5mm}

Notemos que el payoff es no negativo, y su valor es positivo si $S(T)$ es mayor que $K_1$. La ganancia se observa en la Figura~\ref{fig:bullspread}.


\begin{figure}[H]
  \centering
  \includegraphics[width=10cm, height=5cm]{bullspread}
  \caption{Diagrama de ganancia del bull spread con calls}
  \label{fig:bullspread}
\end{figure}

Sin embargo, un \textit{bull spread} con calls tiene un costo inicial $c_2 - c_1$. Por ello, si el valor de la
acción baja habrá una pérdida, aunque acotada.

\subsubsection{Combinaciones}

Las combinaciones, son estrategias que consisten en posiciones en distintos tipos de opción, tanto call como puts.
Por ejemplo, un \textit{straddle} se construye con una posición long en una call con prima $c$ y posición long en una put con prima $p$, ambos con la misma fecha de expiración $T$ y strike $K$. 

El payoff de una \textit{straddle} está dado por:

\vspace{5mm}

$$\mbox{Payoff(bull spread con calls)}= \max\{S(T ) - K, 0\} +\max\{K - S(T), 0\} = |S(T) - K|.$$

\vspace{5mm}

La Figura~\ref{fig:straddle} muestra la ganancia del straddle. Notemos que el costo inicial está dado por $c + p$.

\begin{figure}[H]
  \centering
  \includegraphics[width=10cm, height=5cm]{straddleejem}
  \caption{Diagrama de ganancia para un straddle}
  \label{fig:straddle}
\end{figure}


\subsection{Modelo de Black-Scholes}

Esta fórmula comienza con el diseño de un modelo, denominado Modelo de Black-Scholes, en el cual describen el comportamiento de los precios de las acciones, bajo ciertas hipótesis de mercado. A partir de esto, logran derivar una ecuación diferencial, la ecuación de Black-Scholes que es satisfecha por las opciones call y put europeas, y cuya resolución permite dar el valor exacto
de la prima de la opción en un escenario de mercado sin arbitraje. La solución de esta ecuación
diferencial es conocida como la Fórmula de Black-Scholes.

Los supuestos hechos por Black y Scholes cuando derivaron su fórmula de valoración de opciones fue el siguiente:
\begin{itemize}
    \item no arbitraje: No es posible invertir en un portfolio con costo cero y que exista una probabilidad positiva de
          ganancia futura y una probabilidad nula de pérdida.
    \item completo (Todo derivado puede ser replicable con un portfolio compuesto por el subyacente y la cuenta bancaria.)
    \item precio de un activo que sigue un Movimiento Geométrico Browniano~\cite{Kisbye}.
    \item Tasa de interés libre de riesgo constante.
    \item Posibilidad de invertir en un número ilimitado de opciones y acciones, y de manera continua.
    \label{Hipotesis}
  \end{itemize}


\subsection{Fórmula de Valoración de una call europea con Black-Scholes}
\label{sec:FormulaB}

La hipótesis del modelo de Black-Scholes supone que el valor del activo $S(t)$ se comporta de acuerdo a
un movimiento geométrico browniano, con tendencia $\mu$ y volatilidad $\sigma$. Sin embargo se demuestra
que, bajo una hipótesis de no arbitraje es posible realizar un cambio de medida de probabilidad bajo la cual $S(t)$
sigue un movimiento geométrico browniano con tendencia $r$ y volatilidad $\sigma$, siendo $r$ la tasa libre
de riesgo con capitalización continua. Esta medida de probabilidad también se \textbf{llama medida de
probabilidad neutral al riesgo}

Consideremos que $c$ es la prima de una opción call europea, con strike $K$ y madurez $T$, sobre un activo
cuyo precio sigue un movimiento geométrico browniano con tendencia $r$ y volatilidad $\sigma$ bajo las probabilidades de riesgo neutral. Sea $r$ la tasa libre de riesgo.
Entonces, bajo una hipótesis de no arbitraje se cumple que:



\begin{equation}
c = S(0)\Phi(d_1) - Ke^{-rT}\Phi(d_2)
\label{eq:black}
\end{equation}
donde 
\begin{equation}
\Phi(x) = \displaystyle\frac{1}{\sqrt{2\pi}} \int_{-\infty}^{x} e^{-\displaystyle\frac{1}{2}}
\label{eq:normal} 
\end{equation}


\begin{equation}
d_1 = \displaystyle\frac{\ln \left(\displaystyle\frac{S(0)}{K}\right)+ \left( r + \displaystyle\frac{\sigma^2}{2}\right)T}{\sigma\sqrt{T}}
\label{d1eq}
\end{equation}
\begin{equation}
d_2 = d_1 - \sigma\sqrt{T}
\label{d2eq}
\end{equation}
con $S(0)$ el precio inicial del activo, $r$ la tasa libre de riesgo, $K$ el strike, $T$ la madurez de la opción y
$\sigma$ la volatilidad de la opción~\cite{FormulaB}.

Para simplificar la notación vamos a utilizar $S_t$ en vez de $S(t)$, $\forall t > 0$.


\subsection{Volatilidad}

La volatilidad mide la incertidumbre acerca del precio futuro de un activo.
En teoría, la volatilidad se calcula continuamente, para valuar las opciones,
tal como se dan los cambios en el valor de $S$. Black-Scholes asume $\sigma$
constante, esto implica una previa estimación estadística de $\sigma$, por ejemplo
medir el comportamiento de los precios en los últimos meses y usar estimadores de varianza (volatilidad Histórica).

Como vimos en la sección~\ref{sec:FormulaB} la fórmula de Black-Scholes para una opción call depende de distintos parámetros, el precio inicial del activo, la tasa libre de riesgo, el stike, la madurez de la opción y su volatilidad. Pero esta última no te la brinda el mercado.

\subsubsection{Volatilidad Histórica}

La volatilidad histórica como su nombre lo indica, muestra el riesgo histórico de un período de tiempo de hoy hacia atrás. Se calcula midiendo las variaciones que han tenido los rendimientos del activo en cierto período de tiempo, que puede ser 20 días, 50 días o 200 días o el que cada analista considere mejor y esta volatilidad por lo regular se presenta anualizada. La metodología mas común para calcularla es calculando las desviaciones estándar de los rendimientos del activo. La fórmula~\ref{histo} muestra el cálculo de la volatilidad histórica.

\begin{eqnarray}
x_t = \ln \left(\displaystyle\frac{S_t}{S_{t-1}}\right)
\\
\overline{X} = \displaystyle\frac{1}{n}\sum_{t=1}^{n} x_t
\end{eqnarray}

\begin{equation}
\label{histo}
\mbox{Volatilidad Historica} =\frac 1{\Delta t}\cdot  \sqrt{\displaystyle\frac{1}{n-1}\sum_{t=1}^{n} (x_t -\overline{X})^2} 
\end{equation}
donde $S_t$ es el precio del activo en el día $t$, $n$ la cantidad de días sobre la cual calcularemos la volatilidad histórica, y $\Delta t$ es el factor que permite dar la volatilidad histórica anualizada, en general $\Delta t = \frac 1{252}$ ya que $252$ es la cantidad de días comerciales al año.


\subsubsection{Volatilidad Implícita}


La volatilidad implícita es un factor clave en el trading de opciones que refleja las expectativas respecto al desplazamiento futuro del precio de un activo subyacente. Alta volatilidad implícita indica que los participantes del mercado esperan un movimiento mayor en el futuro y, por el contrario, baja volatilidad apunta hacia un desplazamiento posiblemente menor.

 Como vimos en la sección~\ref{sec:FormulaB} para valorar una call europea necesitamos conocer, el precio inicial 
 del subyacente, la tasa libre de riesgo, el strike, el tiempo de madurez de la opción y la volatilidad $\sigma$ del
 subyacente. Los primeros cuatro parámetros son conocidos al momento de iniciar la opción. En cambio $\sigma$
representa una volatilidad del activo en el período de vigencia de la opción, y por lo tanto es
desconocido. Más aún, se está suponiendo constante cuando en la práctica puede ser un valor
variable e incluso estocástico.
Dado que las opciones call cotizan en el mercado, también es conocida la prima de la opción.
Por ello se denomina volatilidad implícita al valor de $\sigma$ que iguala la prima en el mercado de la opción con la
correspondiente fórmula de Black-Scholes.
 
\subsection{Superficie de volatilidad}

Para valorar las opciones los agentes usan la superficie de volatilidad, ya que la volatilidad depende
del strike y de la madurez.

Una superficie de volatilidad es una representación tridimensional de las volatilidades
implícitas de un subyacente en relación con los diferentes precios de ejercicio y las
diferentes fechas de madurez.
La superficie de volatilidad combina las sonrisas de volatilidad~\cite{Smile} 
 con la estructura temporal de la volatilidad para tabular las volatilidades adecuadas y de este modo poder valorar una opción con cualquier precio de ejercicio y fecha de vencimiento. Un ejemplo de superficie de volatilidad puede ser usada para valorar opciones sobre divisas como se muestra en el Cuadro~\ref{surfi}. En este caso asumimos que la sonrisa es medida como la relación entre la volatilidad y $\displaystyle\frac{K}{S_0}$.

Una dimensión de la tabla es $\displaystyle\frac{K}{S_0}$ (segunda fila) y la otra es el tiempo de madurez (primera columna). Los valores del cuadro son las volatilidades implícitas calculadas a partir de la fórmula de Black-Scholes.
Las volatilidades que no se encuentren en la tabla son calculadas mediante interpolación, por lo general se utilizan Spline cúbicos~\cite{Surface}.


\begin{table}[]
\caption{Superficie de volatilidad}
\label{surfi}
\begin{center}
\begin{tabular}{l|lllll}


             & \multicolumn{5}{c}{$K/S_0$}               \\ \cline{2-6}

                      & $0.9$  & $0.95$ & $1.00$ & $1.05$ & $1.10$ \\ \cline{2-6}
            $1$ mes   & $14.2$ & $13.0$ & $12.0$ & $13.1$ & $14.5$ \\ 
            $3$ meses & $14.0$ & $13.0$ & $12.0$ & $13.1$ & $14.2$ \\ 
            $6$ meses & $14.1$ & $13.3$ & $12.5$ & $13.4$ & $14.3$ \\ 
            $1$ año   & $14.7$ & $14.0$ & $13.5$ & $14.0$ & $15.1$ \\ 
            $2$ años  & $15.0$ & $14.4$ & $14.0$ & $14.5$ & $15.1$ \\ 
            $5$ años  & $14.8$ & $14.6$ & $14.4$ & $14.7$ & $15.0$ \\ 
\end{tabular}
\end{center}
\end{table}


\section{Método de Bisección}

El método de bisección se basa en el Teorema de los valores intermedios~\cite{Intermedio}. Si $f$ es continua en un intervalo cerrado $[a,b]$ y $f(a)f(b)< 0$, entonces $f$ tiene al menos una raíz en el intervalo abierto $(a,b)$.

Si el algoritmo de bisección se aplica a una función continua $f$ en un intervalo $[a, b]$, donde
$f(a)f(b) < 0$, entonces, después de $n$ pasos se habrá calculado una raíz aproximada con un error
a lo más de $\displaystyle\frac{(b - a)}{2^{n+1}}$ \cite{Bisec}.

\vspace{3mm}

El Algoritmo~\ref{Abisec} detalla el método de bisección.

\section{Método de Brent}

El método de Brent es un algoritmo de búsqueda de raíces que combina el método de bisección, el método secante y la interpolación cuadrática inversa. Este método converge siempre que los valores de la función sean computables dentro de una región dada que contiene una raíz.

A diferencia del método de Bisección, el método de Brent converge haciendo menos iteraciones sin perder la robustez del método de bisección ya que
para ciertos casos utiliza el método de bisección, sin caer en los problemas de divergencia que tienen el método de interpolación cuadrática inversa, o del método de la secante.

\subsubsection{Método de la Secante}


En el método de la secante imita el de Newton~\ref{Newten} pero evita el cálculo de derivadas. Entonces se reemplaza la derivada en el punto $x_n$,
 $f'(x_n)$, de la fórmula de Newton por una aproximación de su derivada~\ref{derivate}~\cite{Secante}.

\begin{equation}
\label{Newten}
x_{n+1} = x_n - \displaystyle\frac{f(x_n)}{f'(x_n)}
\end{equation}


\begin{equation}
\label{derivate}
f'(x) = \lim_{h \to 0} \displaystyle\frac{f(x+h)-f(x)}{h} \approx \displaystyle\frac{f(x+h)-f(x)}{h}
\end{equation}

Luego el método de la secante esta dado por:

\begin{equation}
x_{n+1} = x_n - f(x_{n})\displaystyle\frac{x_{n}x_{n-1}}{f(x_{n})f(x_{n-1})}
\end{equation}


\subsubsection{Interpolación cuadrática inversa}


Es un método iterativo, que aplica la fórmula de interpolación de Lagrange para hacer una interpolación cuadrática en el inverso de f.
Para hallar la raíz de la ecuación se implementa el método iterativo~\cite{Brent}:
 

$$
\begin{array}{ll}
x_{n+1} =& \displaystyle\frac{f_{n-1}f_n}{(f_{n-2}-f_{n-1})(f_{n-2}-f_n)}x_{n-2} \\
&+ \displaystyle\frac{f_{n}f_{n-2}}{(f_{n-1}-f_{n})(f_{n-1}-f_{n-2})}x_{n-1} \\
&+ \displaystyle\frac{f_{n-1}f_{n-2}}{(f_{n}-f_{n-1})(f_{n}-f_{n-2})}x_{n}
\end{array}
$$
%\vspace{5mm}
donde $f_k=f(x_k)$. El algoritmo~\ref{Abrent} detalla el método de Brent.


%\vspace{5mm}


\begin{algorithm}[]

\SetAlgoLined
\SetKwInOut{Input}{Input}
\SetKwInOut{Output}{Output}
\ResetInOut{output}
\Input{f, a, b, tol}
\Output{c}
\SetKwInput{Precondition}{Precondition}
\Precondition {f(a)f(b) $<$ 0 \textbf{and} a $<$ b}
 err := b - a\;
 \While{tol $<$ err}{
  c := (a+b)/2\;
  err := err/2\;    
  fc := f(c)\;
  \If{fc = 0}{
  return\;
  }
  \eIf{fcf(a) $<$ 0}{
   b := c\;
   }{
   a := c\;
  }
 }
 return\;
 \caption{Bisección}
 \label{Abisec} 
\end{algorithm}

\begin{algorithm}[]

\SetAlgoLined
\SetKwInOut{Input}{Input}
\SetKwInOut{Output}{Output}
\ResetInOut{output}
\Input{f, a, b, tol}
\Output{b}
\SetKwInput{Precondition}{Precondition}
\Precondition {f(a)f(b) $<$ 0}
 \If{$|f(a)| < |f(b)|$}{
 swap(a,b)\;
 }
 c := a\;
 mflag := True\;
 \While{tol $< |b - a|$ \textbf{or} f(b) = 0}{
  \eIf{f(a) $\not=$ f(c) and f(b) $\not=$ f(c)}{
  	A := $\displaystyle\frac{af(b)f(c)}{(f(a)-f(b))(f(a)-f(c))}$\;
  	B := $\displaystyle\frac{bf(a)f(c)}{(f(b)-f(a))(f(b)-f(c))} $\;
  	C := $\displaystyle\frac{cf(a)f(b)}{(f(c)-f(a))(f(c)-f(b))}$\;
  	s := A+B+C; (interpolacion cuadrática inversa)
  }{
  s := $b - f(b)\displaystyle\frac{b-a}{f(b)-f(a)}$; (metodo de secante)
  }
  \eIf{$\textbf{not} \left(\displaystyle\frac{3a+b}{4} < s < b \right)$ \textbf{or} (mflag \textbf{and} $|s-b| \geq |b-c|/2$) \textbf{or} \qquad
   (\textbf{not} mflag \textbf{and} $|s-b| \geq |c-d|/2 $) \textbf{or} (mflag  \textbf{and} $|b-c| < tol$) \textbf{or}
    (\textbf{not} mflag  \textbf{and} $|c-d| < tol$)}{
  mflag := True\;
  s := $\displaystyle\frac{a+b}{2}$; (metodo de bisección)
  }{
  mflag := False\;
  }
  d := c\;
  c := b\;
  \eIf{f(a)f(s) $<$ 0}{
  b := s
  }{
  a := s
  }
  \If{$|f(a)|<|f(b)|$}{
  swap(a,b)\;
  }
 }
 return\;
 \caption{Brent}
 \label{Abrent}
\end{algorithm}



\section{Redes neuronales}

Una Red Neuronal Artificial es un modelo matemático inspirado en el comportamiento biológico de las neuronas y en la estructura del cerebro, y que es utilizada para resolver un amplio rango de problemas. Su diseño consiste en un conjunto de variables de entrada y de salida con ciertas funciones que relacionan unas con otras y que están determinadas por ciertos parámetros.
La red neuronal se entrena para estimar los parámetros óptimos ($W$ y $b$) para una función $f(x,W,b)$, a partir de un conjunto de datos de entrenamiento 
$\{(x_1,y_1),...,(x_n,y_n)\}$, con el objetivo de lograr que $f(x_i,W,b) \approx y_i$, donde $y_i$ es la salida esperada para el dato de entrada $x_i$ para cada $i = 1,...,n$.
%%%% Donde $x = [x_1,...,x_n]$, $y=[y_1,...,y_n]$
Una vez entrenada la red neuronal ésta es utilizada para computar $f(x,W,b)$ para otros datos $x$ de interés.

\subsection{Perceptrón}

La unidad básica de una red neuronal son los perceptrones (o neuronas). Un perceptrón toma un vector de entradas de valor real, calcula la combinación lineal
de estas entradas con respecto a los pesos, y luego genera una salida, dependiendo de la función de activación. Más precisamente, la salida $o$ para un vector de entradas $(x_1,...,x_n)$ es de la forma:
$$o(x_1,...,x_n) = \psi(w_0+x_1w_1+...+x_nw_n),$$
donde cada $w_i$ es una constante de valor real, o peso, y $\psi$ es la función de activación \cite{Perceptron}.
La Figura \ref{perceptronl} ilustra un perceptrón:

\begin{figure}[H]
  \centering
  \includegraphics[width=12cm]{perceptron}
  \caption{Esquema del perceptrón}
  \label{perceptronl}
\end{figure}

\subsection{Redes Feed-Forward}

Este tipo de algoritmo recibe el nombre de ``red'' porque se construye componiendo funciones (perceptrones).

La arquitectura de este tipo de modelos se puede dividir en
tres partes principales, denominadas capas, tal como se muestra en
la Figura~\ref{Feed-Forward}. 
La característica distintiva de este tipo de red es que no existen conexiones entre neuronas de una misma capa.
Las capas a su vez están completamente conectadas (o fully connected) debido a que cada neurona de
una capa se conecta con todas las neuronas en la capa siguiente.

En la Figura~\ref{Feed-Forward} podemos observar las distintas capas que componen una red neuronal. En primer lugar tenemos la capa de entrada, donde se define cuántos valores de entrada tomará nuestro modelo, estos serán luego enviados a la primer
capa oculta. Después de esto puede venir una o más capas ocultas, seguidas de una capa de salida que genera 
una aproximación del resultado deseado, por ende,
si una red neuronal Feed-Forward tiene $N$ capas, entonces tiene $N-2$ capas ocultas.
Cada unidad (o input) alimenta solo las unidades de la siguiente capa. Las unidades en intermedio de
las capas a menudo se llaman capas ocultas (hidden units) porque no tienen conexión directa con el conjunto de
datos, tanto de entrada como de salida~\cite{Feed}.


\begin{figure}[H]
  \centering
  \includegraphics[width=0.7\textwidth
  %12cm, height=5cm
  ]{feedforward}
  \caption{Feed-Forward}
  \label{Feed-Forward}
\end{figure}



\subsection{Aprendizaje por Descenso por el Gradiente}


Como hemos mencionado anteriormente, el objetivo de una red neuronal es estimar los parámetros $W$ y $b$ óptimos para una función 
$f(x,W,b)$. Una forma de estimar esos parámetros es reducir el error medido por una función de costo.


\begin{equation}
J(x,W,b,Y) = \displaystyle\frac{1}{n}\sum\limits_{i=1}^{n}(f(x_i,W,b) - y_i)^2
\end{equation}

donde $Y=(y_1, \dots, y_n)$, $x = (x_1, \dots, x_n)$.

%\vspace{5mm}

Para reducir dicho error se buscan $W$ y $b$ tal que se minimice la función $J(x,W,b,Y)$. Para esto se puede utilizar el método de descenso por el gradiente.

Para simplificar la notación escribimos $w = [W,b]$, con $w_0=b$. El gradiente de $J$ en $w$, denotado como $\nabla J(w)$, es el vector de derivadas parciales de $J$, es decir,
 $\nabla J(w) = \left( \frac{\partial J(w)}{\partial w_0}, \frac{\partial J(w)}{\partial w_1}, \frac{\partial J(w)}{\partial w_2}, ..., \frac{\partial J(w)}{\partial w_n} \right)$.

 El descenso por el gradiente es un algoritmo iterativo, se comienza con valor inicial de $w^0$ (por ejemplo $w^0 = [0, 0, ..., 0]$) y entonces en
cada iteración (época) damos un paso en la dirección negativa del gradiente en el punto actual. Esto es, $w^{t+1} = w^t - \eta\nabla J(w^t)$, donde $\eta > 0$, conocido como la tasa de aprendizaje, es el encargado de determinar la longitud del paso.
Ya que $\nabla J(x,w^t,Y,b) > 0$ cuando $J$ es creciente en $w^t$, y $\nabla J(x,w^t,Y,b) < 0$ cuando $J$ es decreciente en $w^t$ 
(como muestra la Figura~\ref{Desgrad}), se obtiene 
$J(x,w^{t+1},b,Y) \leq J(x,w^t,b,Y)$, siempre y cuando $\eta$ no sea muy grande (Ver Figura~\ref{Desgrad}).

El Algoritmo~\ref{Agrad} aplica el método del descenso por el gradiente.

\vspace{5mm}

\begin{algorithm}[H]
\SetAlgoLined
\SetKwInOut{Input}{Input}
\SetKwInOut{Output}{Output}
\ResetInOut{output}
\Input{x, Y, $\eta$, T}
\Output{w}
\SetKwInput{Precondition}{Precondition}
\Precondition {d = len(w)}
 initialize $w^0$\;
 t := 0\;
 \While{t $<$ T}{
 i := 0\;
  \While{i $<$ d}{
    $w^{t+1}_i = w^t_i - \eta\nabla J(x,w^t_i,Y,b)$\; 
    i := i+1\;
  }
 t := t+1\;
 }
 return\;
 \caption{Representación esquemática del descenso por el gradiente}
 \label{Agrad}
\end{algorithm}

\begin{figure}
  \centering
  \includegraphics[width=10cm, height=6cm]{funcion_costo}
  \caption{Representación esquemática del descenso por el gradiente}
  \label{Desgrad}
\end{figure}



\subsection{Funciones de Activación}


La función de activación en las redes neuronales son las encargadas de enviar señales al siguiente nivel
o siguiente capa. Es crucial elegir la función de activación correcta para no caer en el \textit{problema de desvanecimiento de gradiente}.

Otra importante característica que debe tener la función de activación es ser diferenciable, ya que al aplicar el
algoritmo del \textit{descenso por el gradiente}, cuando se propaga para hacia atrás, se calculan los gradientes de error
con respecto a los pesos para calcular los nuevos pesos acordemente~\cite{ActivationL}.

Las fórmulas~\ref{Relu},~\ref{Tanh},~\ref{Elu} muestra las funciones de activación que vamos a utilizar, en nuestro caso el $\alpha$ de la Elu es 1. 

\begin{eqnarray}
ReLu(z) = \max(z,0) 
\label{Relu} 
\\
\tanh(z) = \displaystyle\frac{e^z - e^{-z}}{e^z + e^{-z}} %latex fuction buscar
\label{Tanh} 
\\
Elu(z)= \begin{cases}
          \alpha(e^{z -1}) & \mbox{si } z < 0\\
          z  &   \mbox{si }z \ge 0
        \end{cases}
\label{Elu}
\end{eqnarray}


\subsection{Tasa de Aprendizaje}

La tasa de aprendizaje determina el tamaño del paso en cada iteración mientras se mueve hacia un mínimo de una función de error. Una tasa de aprendizaje grande conduce rápidamente a un mínimo local, pero con riesgo de diverger. En cambio una tasa de aprendizaje pequeña no diverge pero necesita muchas iteraciones para llegar al mínimo local (Figura~\ref{lratef}). Comúnmente se utiliza una tasa de aprendizaje grande y se la va decrementando por cada época o cada varias épocas hasta encontrar un buen resultado.

\begin{figure}
  \centering
  \includegraphics[width=15cm%, height=6cm
  ]{learning_rate}
  \caption{Efecto de la tasa de aprendizaje sobre el entrenamiento}
  \label{lratef}
\end{figure}


\subsubsection{Decrecimiento de la tasa de aprendizaje}

El decrecimiento de la tasa de aprendizaje es una método para entrenar redes neuronales, se empieza con una tasa de aprendizaje grande y luego se la va disminuyendo, empíricamente se obtienen mejores resultados que entrenar la red con una tasa de aprendizaje constante. Las fórmulas~\ref{eq:TimeD},~\ref{eq:StepD} y~\ref{eq:ExpoD} describen algunos métodos de decrecimiento:  



\begin{equation}
TimeBasedDecay(epoch) = base\_lr \displaystyle\frac{1}{1+decay\cdot epoch}~\cite{Decay}
\label{eq:TimeD}
\end{equation}

\begin{equation}
StepDecay(epoch) = base\_lr \cdot decay^{\left\lfloor\displaystyle\frac{1+epoch}{epoch\_drop}\right\rfloor}~\cite{Decay}
\label{eq:StepD}
\end{equation}


\begin{equation}
ExponentialDecay(epoch) =  base\_lr \cdot e^{(-k\cdot epoch)}~\cite{Exponential}
\label{eq:ExpoD}
\end{equation}

\vspace{5mm}
donde $\lfloor x \rfloor$ indica la parte entera inferior de $x$, $epoch$ representa la época en cual la red se encuentra, $base\_lr$ es el valor inicial de la tasa de aprendizaje, $decay$ es el coeficiente de decrecimiento de la tasa de aprendizaje y $epoch\_drop$ cada cuantas épocas se decrece la tasa de aprendizaje (Solo en el Step Decay).


\subsubsection{Cyclical Learning Rate}

En este caso la tasa de aprendizaje varía entre un mínimo y máximo, creciendo y decreciendo como muestra la Figura~\ref{Cyclicallr}.
Para obtener dicho máximo y mínimo utilizaremos un método similar al de Smith \cite{Smith}. 
A diferencia del método de Smith, iremos subiendo la tasa de aprendizaje exponencialmente por cada iteración de la red.
Empezaremos con una tasa de aprendizaje de $10^{-10}$ hasta llegar a 1, comparando la tasa de error contra la tasa de aprendizaje.


\begin{figure}
  \centering
  \includegraphics[width=0.6\textwidth%12cm, height=4cm
  ]{cyclical_lr.png}
  \caption{Cyclical Learning Rate}
  \label{Cyclicallr}
\end{figure}

\section{$k$-fold cross validation}

$k$-fold cross validation es una técnica utilizada para evaluar modelos propuestos, con el fin de
encontrar el mejor modelo.
En $k$-foldcross validation los datos de prueba se dividen en $k$ subconjuntos. Uno de los subconjuntos se utiliza como datos de test y el resto ($k-1$) como datos de entrenamiento. El proceso de cross validation es repetido durante $k$ iteraciones, con cada uno de los posibles subconjuntos de datos de test. Finalmente se realiza el promedio de los resultados de cada modelo(cada modelo tiene $k$ resultados), guardando el modelo que obtuvo mejor promedio. Este método es muy preciso puesto que evaluamos a partir de $k$  combinaciones de datos de entrenamiento y de test.